---
FIRST:
  #batch_norm: true
  input_network: [10, 6, 3, 5]
  activation: ['ReLU', 'ReLU', 'ReLU'] #https://pytorch.org/docs/stable/nn.html#non-linear-activations-weighted-sum-nonlinearity
  optimizer: 'Adam'
  learning_rate: 0.0001 #1e-4
  weight_decay: 0.1 #1e-1
  loss_fn: 'MSELoss' #https://neptune.ai/blog/pytorch-loss-functions for classification
  iterations: 100
  batch_size: 16
